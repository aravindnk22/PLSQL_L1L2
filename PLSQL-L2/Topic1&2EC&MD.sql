/*Assignment 1:*/
DECLARE
CURSOR C_TEMP_EMP(DPT_ID NUMBER) IS
SELECT EMPLOYEE_ID,SALARY
FROM EMPLOYEE
WHERE department_id=DPT_ID
FOR UPDATE;

BEGIN
FOR i IN C_TEMP_EMP(10)
LOOP
 DBMS_OUTPUT.PUT_LINE(i.EMPLOYEE_ID||' '||i.SALARY);
 UPDATE employee
   SET salary = salary+(salary * 1.1)
   WHERE CURRENT OF C_TEMP_EMP;
   DBMS_OUTPUT.PUT_LINE(i.EMPLOYEE_ID||' '||i.SALARY);
END LOOP;
END;

/*Assignment 2:*/
DROP TABLE EMP;

CREATE TABLE EMP AS 
SELECT * FROM EMPLOYEES;
SELECT * FROM EMP;
 
CREATE VIEW V_EMP_DEMO AS 
SELECT EMPLOYEE_ID,FIRST_NAME,LAST_NAME
FROM EMP;

SELECT* FROM V_EMP_DEMO;

CREATE OR REPLACE FUNCTION EMP_NAME(EMP_ID IN NUMBER)
RETURN VARCHAR2
IS
V_NAME VARCHAR2(100);
BEGIN
SELECT FIRST_NAME||' '||LAST_NAME
INTO V_NAME
FROM V_EMP_DEMO
WHERE employee_id=EMP_ID;
RETURN V_NAME;
END;

CREATE OR REPLACE PROCEDURE EMP_NAME_PROC
IS
BEGIN
dbms_output.put_line('The full name is: '||EMP_NAME(100));
END;

begin 
EMP_NAME_PROC;
end;

--Run the utldtree.sql script at HR level.
SELECT * FROM USER_OBJECTS WHERE LOWER(object_name) LIKE '%tree%'; 

--Run the PROCEDURE 'DEPTREE_FILL' to create a tree of objects based on a parent object.
EXECUTE DEPTREE_FILL('TABLE','HR','EMP');

--The tree get stored in the view 'DEPTREE'.
SELECT * FROM DEPTREE ORDER BY SEQ#;
